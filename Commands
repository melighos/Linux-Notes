Hardware:
inxi -Fx
lshw
lspci -v, lspci -nn
dmidecode (SMBIOS data structures)
cat /proc/cpuinfo
cat /proc/meminfo
free -m/free -h (ram info)
lsusb -vvv (detailed usb info)
xinput (input devises info and settings)
powerstat (Power Consumption Calculator for laptop)(not default)
cat /sys/firmware/efi/fw_platform_size (UEFI firmware bitness)
efibootmgr (EFI boot priority order)
cat /sys/kernel/debug/vgaswitcheroo/switch (GPUs power and connected output statuses)

Audio:
lspci -v | grep -i audio
lsmod | grep snd
aplay --list-devices
arecord -L
aconnect (ALSA sequencer connection manager)
amixer (command-line mixer for ALSA soundcard driver)

Video:
xrandr --listproviders
glxinfo
lshw -C display
gpu-manager
inxi -Gx
lspci -nn | grep -E 'VGA|Display'
dmesg | egrep 'drm|radeon'
xrandr (current resolution info)
xrandr -d :0 -s 1920x1080 (resolution change)
cat /etc/X11/default-display-manager (display manager in use)

HDD:
lsblk (--fs/-f) (hdd partitions)
fdisk -l (hdd partitions)
df -H/T (filesystems, free space and volumes,-i for inodes info)
mount (mounted file systems)
findmnt (list all mounted file systems)

Network:
cat /etc/services (network services names to port numbers)
cat /etc/protocols (list of Internet (IP) protocols)
lshw -class network (present network interfaces)
nstat (connection info)
nmap (network monitoring tool)
lsof (list open files: regular file, directory, library, stream or a network file)
ss -atun (listening ports, -p to show process names)
netstat -tulpn (listening ports, old)
netstat -rn | grep 0.0.0.0 (route info, old)
lspci -nnk | grep -iA2 net (network controllers info)
ifconfig (interfaces info and control, old)
arp -a (arp table, old)
ip addr (interfaces info)
ip route  (routing table management)
ip rule  (routing policy database management)
ip tunnel  (tunnel configuration)
ip link  (network device configuration)
ip link set dev "eth0" name "new" (changing device name)
ip link set dev NAME up/down (up/down network interface)
ip neighbor (replacement of arp command, arp table)
ssh -p "port" -i "path/to/key" "user@domain_name/ip_address" (-i - only for RSA key connection)
iwconfig (wi-fi connection info)
iwlist scan (wi-fi connection info)
rfkill list all (radio devices status)
rfkill unblock "wifi" (unblock radio device)
iftop -n -i "interface" (network bandwidth monitor)
pktstat -i "interface" -nt (network bandwidth monitor)
trafshow -i "interface" (network bandwidth monitor)
nethogs (process bandwidth monitor)
vnstat (can generate report of network usage)
nslookup -type=any "ip/domain" (DNS information)
dig "ip/domain" (DNS information)
traceroute "ip/domain" (traceroute to destination)
tcptraceroute "ip/domain" (traceroute to destination using TCP SYN for probes)
mtr "ip/domain" (traceroute to destination)
lft -S "ip/domain" (traceroute to destination)
hping3 ip/domain -s "sourse port" -d "destination port" (network connection and security monitoring)
PackETH (graphical ethernet packet generator)
tcpdump (network analysis tool)
nping --"protocol" -p "port" "host" (test specific port status/connection)
whois ip/domain (domain owner info)
drill example.com (tool designed to get all sorts of information out of the DNS)
udpmt -p [port] -s [bytes] target_host (it creates UDP traffic)
udptarget -p [port] (it’s able to receive UDP traffic)
tcpmt -p [port] -s [bytes] target_host (it creates TCP traffic)
tcptarget -p [port] (it’s able to receive TCP traffic)
telnet SWITCH_IP (access the switch from a host in its subnetwork)
dhclient -v -r "interface" (release current dhcp address)
dhclient -v "interface" (request new dhcp address)
nmcli (comandline too for NetworkManager)
tmux (terminal multiplexer, shared sessions(need install))
curl -Iv https://www.site.com/ or 'ip address:port' (transfer data from or to a server to test connectivity)
iptables (command line utility for configuring Linux kernel firewall)

Security:
getent passwd/group (list users/group)
cat /etc/passwd (list users)
cat /etc/group (list groups)
groups 'user' (user group membership)
gpasswd -a 'user' 'group' (add user to a group)
gpasswd -d 'user' 'group' (remove user from a group)
usermod -L 'user' (block user from login)
w  (show active users)
who -u (show active users and their tty PID)
id 'user' (show users uid and participated groups)
last (login attempts)
lastlog (last time logged in)
sudo passwd -l username (disable login)
sudo passwd -u username (undo disabled login)
sudo init 1 (single user mod)
fsck (filesystem check)(-a auto repair)
e2fsck -p (-f force check)(ext2-4 filesystem check)
tune2fs -c 'number' /dev/sda(n) (automatic fsck check)
dumpe2fs -h /dev/sda(n) (partition fsck status)
chmod 777 filename  (change file permission, user group other: rwxrwxrwx, r=4 w=2 x=1)
chmod 1777 filename (setuid=4, setgid=2, sticky=1)
chown user:group /file (change file or folder owner)
lsattr /path/to/ (show attributes)
chattr -+ /path/to/ (add/rmv attributes)
visudo (edit sudo config file)
sudo -i (become root)
killall -u user_name (kill all processes by that user)
su - USERNAME (switch to a different user account)
su - USERNAME -c 'command' (execute a single command from a different account)

Services:
systemctl status,stop,start,restart,reload,disable,enable "service" (managing services)
service "name" status (old)
systemd-analyze blame (system boot-up performance)
systemd-analyze critical-chain (system boot-up performance)
systemctl list-unit-files --type=service (list of all services)
systemctl -r --type service --all
systemctl list-unit-files --type=service | grep enabled (list enabled boot services)
systemctl --user (for user-space services)

Processes:
ps -aux (all running processes, BSD-style)
ps -axjf (a and x for all processes, j for jobs format and f for ASCII art tree)
ps -efH (current running processes in a tree structure, -H for process hierarchy)
ps -ely (all running processes)
pgrep 'appname' (gives process PID)
pkill "PID" (kill process)
ps --no-headers -Leo user | sort | uniq -c (number of threads for each user)
lsof /path/to/file (what processes using that file)
lsof -p "PID" (Which files does process by "PID" have open)
lsof /path/to/library (which processes have this library open)
lsof -u "user" (which files does user "user" have open)
jobs -l (list the status of all running jobs)
bg "job" (resumes suspended jobs in the background,"job" - Specifies the job(job number = %n or %commandNameHere))
fg "job" (resumes a suspended job and brings it to the foreground, using job number or name)
disown (detach job from your current terminal session)
disown -a && exit (detach children processes from parent terminal)
wait [n ...] (wait for each specified process and return its termination status,n = process ID or a job  specification)
nice -n "value" "program" (start process with a specific nice value)
renice -n "value" -p "PID" (change nice value of existing process)
renice -n "value" -u "user" (change nice value for all running processes for a user)

Files and Directories:
ls -l (list files and folders)(ls -lc(change time),ls -lu(modification time))
du -sh "file" (human readable size)
du -ah | sort -rh (size of the current directory, subdirectories and files(-a - all,-h - human))
ls -R, ls -mR *
stat 'filename' (file metadata info(time-stamps, ownership, permissions, size and inode number))
file 'filename' (file type details)
touch (option) filename (change file mod/acs time, create file if not exist)
ln -s /path/to/file /path/to/source
sed -i -e 's/old/new/g' file1.txt (g=global,whole line.s=substitute command.i=in-place.e=expression/command)(text line editor)
find . -type f -name "*.txt" -exec sed -i'' -e 's/foo/bar/g' {} + (same but differently)
find . -type f ! -name "avoid_this_directory_please" (find with avoid command)
find . -printf "%M\t%u\t%g\t%p\n" (list of files, as ls command)
grep -r 'word' . (Recursively Search All Files For A String)
grep -v 'excluded word' /file (exclude lines with a string or syntax match)
rsync (utility that provides fast incremental file transfer)
scp (-vp) /what/to/copy user@otherhost:/where/to/paste - upload to a server
scp (-vp) user@host:/file/to/copy /where/to/put - download from a server
dpkg --list | grep linux-image (available kernels)
strings 'file' (printable strings in binary files)
tree 'folder' (tree view of folder content)
mkdir -p folder/{sub1,sub2}/{sub1,sub2,sub3} or {1..100}/{1..100} (create folder with subfolders)
head (show first 10 lines of a file(default))
tail (show last 10 lines of a file(default))
tail -f (real-time logging of a file content)
cut (cutting sections from each line of files)
sort (print the sorted output)
tar -zcvf archive.tar.gz path/to/folder (create archive + compress(z - gzip, c - create archive, v - verbose, f - give specific name))
tar -zxvf archive.tar.gz (decompress archive(x - extract))
tar tvf archive.tar (view an existing tar archive)
tee (monitor a command's output in your shell (or piping that output to another program) while *also* writing it to a logfile)
echo "$(<filename)" (display file content)
printf "%s" "$(<filename)" (display file content)
echo /path/to/folder/* (display directory content)
printf "%s\n" /path/to/folder/* (display directory content)
readlink -f /path/to/ (show simlink source,-f follows symlink to symlink until it finds something that isn't a symlink)

System:
help (shell info and a list of builtin commands)
printenv (print all or part of environment variables)
env (print all exported environment variables)
env VAR1="value" command_to_run command_options (run a program in a modified environment)
uname -a (general system info)
journalctl (systemd journal)
dmesg -w (system log output)
dmesg -k (Print kernel messages)
dmesg | grep -i memory (memory usage messages)
lsmod (currently loaded kernel modules) 
modinfo module_name (information about module)
modprobe module_name (load kernel module)
modprobe -r module_name (unload kernel module)
insmod "*.ko" (inject loadable module in to the kernel)
rmsmod "name" (unload loadable module from kernel)
mount -o remount,rw / (remount root partition as writable)
mount /dev/device /mountpoint
mount (mounted filesystems)
mount -o bind /some/where /else/where (bind mount, mounting one path into another path)
mount --bind olddir newdir (same sf above)
mount --rbind /some/where /else/where (bind mount with replicate mount points underneath)
mount -o remount,ro,bind /else/where (remount bind mount as read-only)
df -ah (mounted filesystems)
findmnt (mounted filesystems)
cat /proc/mounts (mounted filesystems)
tune2fs -l /dev/sda* (partition filesystem information)
dbus-monitor (monitor the session bus)
locale -a (available locales)
which "command" (executable location)
cat /proc/cmdline (kernel boot parameters)
bind -p(-P) (display bash keybindings)
update-initramfs (generate an initramfs image)
update-alternatives <option> <command> (Switching between different program versions)
history (see bash history)
fc (edit last used command in editor)
type -a "Command" (find out if command is built-in or external binary file, -a - display all of the places that contains an executable)
sleep "n" (add delay for a specified amount of time, n - seconds)
crontab -e (add job to cron from current user)
crontab -e -u 'user' (edit cron jobs of specified user)
crontab -l (list cron jobs for current user)
crontab -r (clear cron jobs for current user)
last -x (system shutdowns and reboots entries)
udevadm (udev management tool)
alias (print all current aliases)
set (all shell variables, environmental variables, local variables, and shell function, modify the options of the current shell)
ldd /path/to/binary/ (print shared library dependencies of the program)
whereis "command" (locates the binary, source and manual files for the specified command)

debugging:
gdb /path/to/file
gdb --pid=$(pid of 'process') (debug already running application)
gdb appname, bt full (GNU debugger)
gdb appname core, bt full (GNU debugger, get a backtrace)
gdb -p PID (Attach to the process ID)
coredumpctl (core dump journal)
coredumpctl list (core dump journals list)
coredumpctl gdb match, bt (examine the backtrace)
strace appname (trace system calls and signals)
strace -p PID (Attach to the process ID) 
strace -eopen appname  (what this program tries to open)
LD_DEBUG=files appname > appname.log 2>&1 (what files an application is looking for)
file /usr/bin/appname  (get more information)
ltrace   (trace system calls and signals)
debugfs /dev/sdXN (file system debugger, used to examine and change the state of an ext2-4 file system)

