Create a named routing table. As an example, I have used the name, "mgmt," below.

echo '200 mgmt' >> /etc/iproute2/rt_tables

Above, the kernel supports many routing tables and refers to these by unique integers numbered 0-255.
A name, mgmt, is also defined for the table.

Below, a look at a default '/etc/iproute2/rt_tables' follows, showing that some numbers are reserved.
The choice in this answer of 200 is arbitrary; one might use any number that is not already in use, 1-252.

#
# reserved values
#
255     local
254     main
253     default
0       unspec
#
# local
#

/etc/network/interfaces:

# The loopback network interface
auto lo
iface lo inet loopback

# The production network interface
auto eth0
allow-hotplug eth0
# iface eth0 inet dhcp 
# Remove the stanzas below if using DHCP.
iface eth0 inet static
  address 10.10.10.140
  netmask 255.255.255.0
  gateway 10.10.10.1

# The management network interface
auto eth1
allow-hotplug eth1
iface eth1 inet static
  address 172.16.100.10
  netmask 255.255.255.0
  post-up ip route add 172.16.100.0/24 dev eth1 src 172.16.100.10 table mgmt
  post-up ip route add default via 172.16.100.1 dev eth1 table mgmt
  post-up ip rule add from 172.16.100.10/32 table mgmt
  post-up ip rule add to 172.16.100.10/32 table mgmt

#Bridging:
#Basically, bridging is plugging one computer into another computer that already has a connection to a larger network (like the internet) and letting the bridged computer use the networked computer’s connection.
#Bridge interface(br0) will become your primary network interface for this machine, so if you have set up static IP on your router, you will need to reassign it to MAC of the br0 interface.

#create simple bridge interface that will use dhcp
auto br0
iface br0 inet dhcp
  bridge_ports eth0 eth1

#manual bridge config
iface br0 inet static
    bridge_ports eth0 eth1
        address 192.168.1.2
        broadcast 192.168.1.255
        netmask 255.255.255.0
        gateway 192.168.1.1

----------------------------------------------------------------------------
Netplan in Ubuntu18.04 and above: (To go back to /network/interfaces file use "install ifupdown")
Use "netplan apply" command to apply recent changes.

/etc/netplan/01-netcfg.yaml or 50-cloud-init.yaml:
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s3:
      dhcp4: true
      dhcp6: true
    enp0s8:
      dhcp4: false
      dhcp6: false
      addresses: [192.168.56.110/24, “2001:1::1/64”]
      gateway4:  192.168.56.1
      nameservers:
              addresses: [8.8.8.8, 8.8.4.4]

#dhcp configured bridge
  bridges:
    br0:
      dhcp4: true
      dhcp6: true
      interfaces: [enp42s0]

#manual bridge config
  bridges:
  br0:
    interfaces: [enp1s0]
    addresses: [192.168.1.239/24]
    gateway4: 192.168.2.1
    mtu: 1500
    nameservers:
      addresses: [8.8.8.8]
    parameters:
      stp: true
      forward-delay: 4
    dhcp4: no
    dhcp6: no

-------------------------------------------------------------------------------
RHEL/CentOS:
/etc/sysconfig/network:
NETWORKING=yes
HOSTNAME=host.sld.tld
GATEWAY=10.10.10.1

/etc/sysconfig/network-scripts/ifcfg-eth1:
DEVICE=eth1
TYPE=Ethernet
ONBOOT=yes
NM_CONTROLLED=no
BOOTPROTOCOL=none
IPADDR=172.16.100.10
NETMASK=255.255.255.0
NETWORK=172.16.100.0
BROADCAST=172.16.100.255

/etc/sysconfig/network-scripts/route-eth1:
172.16.100.0/24 dev eth1 table mgmt
default via 172.16.100.1 dev eth1 table mgmt

/etc/sysconfig/network-scripts/rule-eth1:
from 172.16.100.0/24 lookup mgmt

